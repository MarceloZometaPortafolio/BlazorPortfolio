@page "/projects/{Slug}"

@inject Portfolio.Blazor.DataProvider.APIService service
@inject NavigationManager NavManager
@using Portfolio.Shared

<h3>@Project.Title</h3>
<br />

<h5>Requirements:</h5>
<MarkdownView Content="@Project.Requirement"/>
<br />

<h5>Design:</h5>
<MarkdownView Content="@Project.Design" />
<br />

<h5>Completion date:</h5>
<MarkdownView Content="@Project.CompletionDate.ToString()"/>
<br />



<h5>Languages:</h5>
@foreach (var l in languages)
{
    <ul>
        <li><a class="text-primary" @onclick="() => NavigateToCategory(nameof(languages), l.Slug)">@l.Name</a></li>
    </ul>
}



<h5>Platforms:</h5>
@foreach (var p in platforms)
{
    <ul>
        <li><a class="text-primary" @onclick="() => NavigateToCategory(nameof(platforms), p.Slug)">@p.Name</a></li>
    </ul>
}



<h5>Technologies:</h5>
@foreach (var t in technologies)
{
    <ul>
        <li><a class="text-primary" @onclick="() => NavigateToCategory(nameof(technologies), t.Slug)">@t.Name</a></li>
    </ul>
}

@code {
    [Parameter]
    public string Slug { get; set; }

    public Project Project = new Project();

    private IEnumerable<Language> languages = new List<Language>();
    private IEnumerable<Platform> platforms = new List<Platform>();
    private IEnumerable<Technology> technologies = new List<Technology>();

    protected override async Task OnInitializedAsync()
    {
        //return base.OnInitializedAsync();
        Project = await service.GetProjectBySlugAsync(Slug);

        languages = await service.GetLanguagesByProjectId(Project.id);
        platforms = await service.GetPlatformsByProjectId(Project.id);
        technologies = await service.GetTechnologiesByProjectId(Project.id);
    }

    public void NavigateToCategory(string url, string slug)
    {
        NavManager.NavigateTo($"{url}/{slug}");
    }
}
